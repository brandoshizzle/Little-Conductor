{"version":3,"sources":["logo.svg","config.js","hash.js","store.js","components/AlbumList.js","components/PlaylistTable.js","api.js","components/ActionButtons.js","components/PlaylistAlbumsPage.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","state","localStorage","getItem","store","JSON","parse","token","allPlaylists","album","selectedPlaylists","progress","done","total","percent","errors","observe","setItem","stringify","useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","list","position","overflow","maxHeight","view","props","classes","_useState","useState","_useState2","Object","slicedToArray","selectedIndex","setSelectedIndex","_useAxios","useAxios","url","method","headers","Authorization","_useAxios2$","data","loading","error","react_default","a","createElement","className","List","component","aria-label","items","map","i","ListItem","button","selected","onClick","event","index","key","id","ListItemAvatar","Avatar","variant","src","images","alt","ListItemText","primary","name","tableIcons","Add","forwardRef","ref","AddBox_default","assign","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowDownward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","user","playlists","getTracksAndAlbums","_x","_x2","_getTracksAndAlbums","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee2","delayms","nextLink","APItracks","tracks","albums","albumList","res","track","wrap","_context2","prev","next","axios","get","concat","sent","console","log","place","hasOwnProperty","trackCount","abrupt","stop","delay","_x3","_delay","_callee3","ms","_context3","timeout","useEffect","_loadTable","_callee","playlistBatch","playlist","currentDelay","_i","_playlist","_yield$getTracksAndAl","_yield$getTracksAndAl2","newTracks","newAlbums","newAlbumList","_context","owner","external_urls","spotify","tracks_endpoint","href","t0","keys","t1","value","loadTable","Promise","setTimeout","style","maxWidth","dist_default","columns","title","field","values","icons","options","showTitle","selection","maxBodyHeight","draggable","onSelectionChange","rows","APIdelay","addAlbum","_addAlbum","side","albumDetails","trackURIs","j","firstTrackPos","k","nextNum","length","push","uri","indexOf","uris","post","Content-Type","display","flexWrap","justifyContent","margin","progressBox","alignItems","flexGrow","Typography","LinearProgress","color","Button","api","removeItem","padding","spacing","textAlign","text","secondary","PlaylistAlbumsPage","Grid","container","xs","Paper","components_AlbumList","components_PlaylistTable","components_ActionButtons","TabPanel","children","other","objectWithoutProperties","role","hidden","aria-labelledby","Box","a11yProps","aria-controls","Main","setValue","_useAxios2","display_name","AppBar","Tabs","onChange","newValue","Tab","label","components_PlaylistAlbumsPage","App","_this","classCallCheck","_super","call","artists","duration_ms","is_playing","progress_ms","_token","access_token","setState","logo","join","components_Main","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c70b7c0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","export const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nexport const clientId = '149f235f7ad941419d900b585b05d9e3';\r\n// export const redirectUri = 'http://localhost:3000/redirect';\r\nexport const redirectUri = 'https://brandoshizzle.github.io/Little-Conductor/redirect';\r\nexport const scopes = ['user-read-email', 'playlist-modify-public', 'playlist-modify-private'];\r\n","// Get the hash of the url\r\nconst hash = window.location.hash\r\n  .substring(1)\r\n  .split(\"&\")\r\n  .reduce(function(initial, item) {\r\n    if (item) {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n    }\r\n    return initial;\r\n  }, {});\r\nwindow.location.hash = \"\";\r\n\r\nexport default hash;\r\n","import { store } from '@risingstack/react-easy-state';\r\nimport { observe } from '@nx-js/observer-util';\r\n\r\nconst state = localStorage.getItem('state')\r\n\t? store(JSON.parse(localStorage.getItem('state')))\r\n\t: store({\r\n\t\t\ttoken: '',\r\n\t\t\tallPlaylists: {},\r\n\t\t\talbum: {},\r\n\t\t\tselectedPlaylists: [],\r\n\t\t\tprogress: {\r\n\t\t\t\tdone: 0,\r\n\t\t\t\ttotal: 0,\r\n\t\t\t\tpercent: 0,\r\n\t\t\t},\r\n\t\t\terrors: [],\r\n\t  });\r\n\r\nobserve(() => {\r\n\tlocalStorage.setItem('state', JSON.stringify(state));\r\n});\r\n\r\nexport default state;\r\n\r\nwindow.state = state;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport useAxios from 'axios-hooks';\r\nimport { view } from '@risingstack/react-easy-state';\r\nimport state from './../store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t},\r\n\tlist: {\r\n\t\tposition: 'relative',\r\n\t\toverflow: 'auto',\r\n\t\tmaxHeight: '70vh',\r\n\t},\r\n}));\r\n\r\nconst AlbumList = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { token } = props;\r\n\tconst [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n\tconst [{ data, loading, error }] = useAxios({\r\n\t\turl: 'https://api.spotify.com/v1/artists/4SCWiQbJCMTHK737aNUqBJ/albums?offset=0&limit=20&market=CA',\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: 'Bearer ' + token,\r\n\t\t},\r\n\t});\r\n\r\n\tconst handleListItemClick = (event, index) => {\r\n\t\tsetSelectedIndex(index);\r\n\t\tstate.album = data.items[index];\r\n\t};\r\n\tif (loading) return <p>Loading...</p>;\r\n\tif (error) return <p>Error!</p>;\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<List className={classes.list} component=\"nav\" aria-label=\"main mailbox folders\">\r\n\t\t\t\t{data.items.map((album, i) => (\r\n\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\tselected={selectedIndex === i}\r\n\t\t\t\t\t\tonClick={(event) => handleListItemClick(event, i)}\r\n\t\t\t\t\t\tkey={album.id}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t<Avatar variant=\"square\">\r\n\t\t\t\t\t\t\t\t<img src={album.images[1].url} alt=\"cover\" />\r\n\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t<ListItemText primary={album.name} />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default view(AlbumList);\r\n","import React, { forwardRef, useEffect, useState } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport axios from 'axios';\r\n\r\nimport { view, autoEffect } from '@risingstack/react-easy-state';\r\nimport state from './../store';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n\tAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n\tCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n\tClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\tDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n\tDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\tEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n\tExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n\tFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n\tFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n\tLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n\tNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\tPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n\tResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\tSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n\tSortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n\tThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n\tViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst PlaylistTable = (props) => {\r\n\tconst { token, user } = props;\r\n\t// const [playlists, setPlaylists] = useState(state.allPlaylists);\r\n\r\n\tlet playlists = state.allPlaylists;\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('render time');\r\n\t\tplaylists = state.allPlaylists;\r\n\t});\r\n\r\n\t// Get data from storage or API on launch\r\n\tuseEffect(() => {\r\n\t\tasync function loadTable() {\r\n\t\t\tlet nextLink;\r\n\t\t\tlet newPlaylistsFromAPI = [];\r\n\t\t\tdo {\r\n\t\t\t\tlet res = await axios.get(nextLink || `https://api.spotify.com/v1/me/playlists?limit=50`, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: 'Bearer ' + token,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tlet playlistBatch = res.data.items;\r\n\t\t\t\tfor (const i in playlistBatch) {\r\n\t\t\t\t\tlet playlist = playlistBatch[i];\r\n\t\t\t\t\tif (playlist.owner.id === user.id) {\r\n\t\t\t\t\t\tif (!state.allPlaylists.hasOwnProperty(playlist.id)) {\r\n\t\t\t\t\t\t\tstate.allPlaylists[playlist.id] = {\r\n\t\t\t\t\t\t\t\tid: playlist.id,\r\n\t\t\t\t\t\t\t\tname: playlist.name,\r\n\t\t\t\t\t\t\t\turl: playlist.external_urls.spotify,\r\n\t\t\t\t\t\t\t\ttracks_endpoint: playlist.tracks.href,\r\n\t\t\t\t\t\t\t\ttracks: {},\r\n\t\t\t\t\t\t\t\talbumList: 'Loading...',\r\n\t\t\t\t\t\t\t\talbums: {},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnextLink = res.data.next;\r\n\t\t\t} while (nextLink);\r\n\r\n\t\t\tconst delayIncrement = 300;\r\n\t\t\tlet currentDelay = -delayIncrement;\r\n\t\t\tfor (const i in state.allPlaylists) {\r\n\t\t\t\tlet playlist = state.allPlaylists[i];\r\n\t\t\t\tif (playlist.albumList === 'Loading...') {\r\n\t\t\t\t\tawait delay(currentDelay);\r\n\t\t\t\t\tconst [newTracks, newAlbums, newAlbumList] = await getTracksAndAlbums(playlist.id);\r\n\t\t\t\t\t// console.log(newTracks, newAlbums, newAlbumList);\r\n\t\t\t\t\tstate.allPlaylists[i].tracks = newTracks;\r\n\t\t\t\t\tstate.allPlaylists[i].albums = newAlbums;\r\n\t\t\t\t\tstate.allPlaylists[i].albumList = newAlbumList;\r\n\t\t\t\t\t// currentDelay += delayIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Get all user's playlists first, then determine if we need additional API calls\r\n\t\tloadTable();\r\n\t}, []);\r\n\r\n\tasync function getTracksAndAlbums(id, delayms) {\r\n\t\tlet nextLink;\r\n\t\tlet APItracks = [];\r\n\t\tlet tracks = {};\r\n\t\tlet albums = {};\r\n\t\tlet albumList = '';\r\n\t\tdo {\r\n\t\t\tlet res = await axios.get(nextLink || `https://api.spotify.com/v1/playlists/${id}/tracks?fields=`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: 'Bearer ' + token,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tconsole.log(res);\r\n\t\t\tAPItracks = APItracks.concat(res.data.items);\r\n\t\t\tnextLink = res.data.next;\r\n\t\t} while (nextLink);\r\n\r\n\t\tfor (const i in APItracks) {\r\n\t\t\tconst track = APItracks[i].track;\r\n\t\t\ttracks[i] = { place: i, id: track.id, album: track.album.name };\r\n\t\t\tif (albums.hasOwnProperty(track.album.name)) {\r\n\t\t\t\talbums[track.album.name].trackCount += 1;\r\n\t\t\t} else {\r\n\t\t\t\talbums[track.album.name] = { name: track.album.name, trackCount: 0 };\r\n\t\t\t\talbumList += ', ' + track.album.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\talbumList = albumList.substring(2);\r\n\r\n\t\treturn [tracks, albums, albumList];\r\n\t}\r\n\r\n\tasync function delay(ms) {\r\n\t\tawait timeout(ms);\r\n\t}\r\n\r\n\tconst timeout = (ms) => new Promise((res) => setTimeout(res, ms));\r\n\r\n\treturn (\r\n\t\t<div style={{ maxWidth: '100%' }}>\r\n\t\t\t<MaterialTable\r\n\t\t\t\tcolumns={[\r\n\t\t\t\t\t// { title: 'Cover', field: 'cover' },\r\n\t\t\t\t\t{ title: 'Name', field: 'name' },\r\n\t\t\t\t\t{ title: 'Albums', field: 'albumList' },\r\n\t\t\t\t]}\r\n\t\t\t\tdata={Object.values(playlists)}\r\n\t\t\t\ticons={tableIcons}\r\n\t\t\t\toptions={{\r\n\t\t\t\t\tshowTitle: false,\r\n\t\t\t\t\tselection: true,\r\n\t\t\t\t\t// paging: false,\r\n\t\t\t\t\tmaxBodyHeight: '60vh',\r\n\t\t\t\t\tdraggable: false,\r\n\t\t\t\t\t// actionsColumnIndex: -1,\r\n\t\t\t\t}}\r\n\t\t\t\tonSelectionChange={(rows) => (state.selectedPlaylists = rows)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default view(PlaylistTable);\r\n","import state from './store';\r\nimport axios from 'axios';\r\n\r\nconst APIdelay = 300;\r\n\r\nexport async function addAlbum(side) {\r\n\tconsole.log('Go time!');\r\n\tstate.progress.done = 0;\r\n\tstate.progress.total = state.selectedPlaylists.length;\r\n\tstate.progress.percent = 0;\r\n\r\n\tlet delayms = 0;\r\n\r\n\tlet res = await axios.get(`https://api.spotify.com/v1/albums/${state.album.id}/tracks`, {\r\n\t\theaders: {\r\n\t\t\tAuthorization: 'Bearer ' + state.token,\r\n\t\t},\r\n\t});\r\n\tconst albumDetails = res.data;\r\n\tlet trackURIs = [];\r\n\tfor (var i = 0; i < albumDetails.total; i++) {\r\n\t\ttrackURIs.push(albumDetails.items[i].uri);\r\n\t}\r\n\r\n\tfor (var j = 0; j < state.selectedPlaylists.length; j++) {\r\n\t\tconst playlist = state.selectedPlaylists[j];\r\n\t\t// Don't add album if it's already on the playlist\r\n\t\tif (playlist.albumList.indexOf(state.album.name) === -1) {\r\n\t\t\tlet data =\r\n\t\t\t\tside === 'start'\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\turis: trackURIs,\r\n\t\t\t\t\t\t\tposition: 0,\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t\turis: trackURIs,\r\n\t\t\t\t\t  };\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await axios.post(`https://api.spotify.com/v1/playlists/${playlist.id}/tracks`, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: 'Bearer ' + state.token,\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\t// Update local store\r\n\t\t\t\tconst firstTrackPos = side === 'start' ? 0 : state.allPlaylists[playlist.id].tracks.length;\r\n\t\t\t\tstate.allPlaylists[playlist.id].albumList =\r\n\t\t\t\t\tside === 'start'\r\n\t\t\t\t\t\t? `${state.album.name}, ` + state.allPlaylists[playlist.id].albumList\r\n\t\t\t\t\t\t: (state.allPlaylists[playlist.id].albumList += `, ${state.album.name}`);\r\n\r\n\t\t\t\tfor (var k = 0; k < albumDetails.total; k++) {\r\n\t\t\t\t\tlet nextNum = firstTrackPos + k;\r\n\t\t\t\t\tstate.allPlaylists[playlist.id].tracks[nextNum] = {\r\n\t\t\t\t\t\tplace: nextNum,\r\n\t\t\t\t\t\tid: albumDetails.items[k].id,\r\n\t\t\t\t\t\talbum: albumDetails.name,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstate.progress.done++;\r\n\t\tstate.progress.percent = (state.progress.done / state.progress.total) * 100;\r\n\t\tdelayms += APIdelay;\r\n\t\tawait delay(delayms);\r\n\t}\r\n}\r\n\r\nexport async function getAllUserPlaylists() {\r\n\t// let nextLink;\r\n\t// let newPlaylistsFromAPI = [];\r\n\t// do {\r\n\t// \tlet res = await axios.get(nextLink || `https://api.spotify.com/v1/me/playlists?limit=50`, {\r\n\t// \t\theaders: {\r\n\t// \t\t\tAuthorization: 'Bearer ' + token,\r\n\t// \t\t},\r\n\t// \t});\r\n\t// \tconsole.log(res);\r\n\t// \tlet playlistBatch = res.data.items;\r\n\t// \tfor (const i in playlistBatch) {\r\n\t// \t\tlet playlist = playlistBatch[i];\r\n\t// \t\tif (playlist.owner.id === user.id) {\r\n\t// \t\t\tlet dupe = playlists.find((element) => element.id === playlist.id);\r\n\t// \t\t\tif (dupe === undefined) {\r\n\t// \t\t\t\tnewPlaylistsFromAPI.push({\r\n\t// \t\t\t\t\tid: playlist.id,\r\n\t// \t\t\t\t\tname: playlist.name,\r\n\t// \t\t\t\t\turl: playlist.external_urls.spotify,\r\n\t// \t\t\t\t\ttracks_endpoint: playlist.tracks.href,\r\n\t// \t\t\t\t\ttracks: {},\r\n\t// \t\t\t\t\talbumList: 'Loading...',\r\n\t// \t\t\t\t\talbums: {},\r\n\t// \t\t\t\t});\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t}\r\n\t// \tnextLink = res.data.next;\r\n\t// } while (nextLink);\r\n\t// const newList = [...playlists].concat(newPlaylistsFromAPI);\r\n\t// setPlaylists(newList);\r\n\t// localStorage.setItem('user-playlists', JSON.stringify(newList));\r\n\t// const delayIncrement = 300;\r\n\t// let currentDelay = -delayIncrement;\r\n\t// for (const i in playlists) {\r\n\t// \tlet playlist = playlists[i];\r\n\t// \tif (playlist.albumList === 'Loading...') {\r\n\t// \t\tconst [newTracks, newAlbums, newAlbumList] = await getTracksAndAlbums(playlist.id, currentDelay);\r\n\t// \t\tconsole.log(newTracks, newAlbums, newAlbumList);\r\n\t// \t\tlet playlistsCopy = [...playlists];\r\n\t// \t\tplaylistsCopy[i].tracks = newTracks;\r\n\t// \t\tplaylistsCopy[i].albums = newAlbums;\r\n\t// \t\tplaylistsCopy[i].albumList = newAlbumList;\r\n\t// \t\tsetPlaylists(playlistsCopy);\r\n\t// \t\tlocalStorage.setItem('user-playlists', JSON.stringify(playlistsCopy));\r\n\t// \t}\r\n\t// }\r\n}\r\n\r\nasync function delay(ms) {\r\n\tawait timeout(ms);\r\n}\r\n\r\nconst timeout = (ms) => new Promise((res) => setTimeout(res, ms));\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport * as api from './../api';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { view } from '@risingstack/react-easy-state';\r\nimport state from './../store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\tjustifyContent: 'flex-start',\r\n\t},\r\n\titem: {\r\n\t\tmargin: 5,\r\n\t},\r\n\tprogressBox: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tprogress: {\r\n\t\tflexGrow: '1',\r\n\t},\r\n}));\r\n\r\nconst ActionButtons = (props) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className={classes.progressBox}>\r\n\t\t\t\t<Typography variant=\"subtitle1\">Current Task</Typography>\r\n\t\t\t\t<LinearProgress\r\n\t\t\t\t\tvariant=\"determinate\"\r\n\t\t\t\t\tvalue={state.progress.percent}\r\n\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\tclassName={classes.progress}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tclassName={classes.item}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tapi.addAlbum('start');\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tAdd to start\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tclassName={classes.item}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tapi.addAlbum('end');\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tAdd to end\r\n\t\t\t</Button>\r\n\t\t\t<Button variant=\"contained\" color=\"primary\" className={classes.item}>\r\n\t\t\t\tAdd to start and push last album\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tclassName={classes.item}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tlocalStorage.setItem('token', '');\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tClear Token\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tclassName={classes.item}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tlocalStorage.removeItem('state');\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tReload all playlists\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default view(ActionButtons);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport AlbumList from './AlbumList';\r\nimport PlaylistTable from './PlaylistTable';\r\nimport ActionButtons from './ActionButtons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\ttextAlign: 'left',\r\n\t\tcolor: theme.palette.text.secondary,\r\n\t},\r\n}));\r\n\r\nconst PlaylistAlbumsPage = (props) => {\r\n\tconst { token, user } = props;\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t<Typography component=\"h5\">Albums</Typography>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<AlbumList token={token} />\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t<Typography component=\"h5\">Playlists</Typography>\r\n\t\t\t\t\t<PlaylistTable token={token} user={user} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<ActionButtons token={token} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PlaylistAlbumsPage;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport useAxios from 'axios-hooks';\r\nimport PlaylistAlbumsPage from './PlaylistAlbumsPage';\r\n\r\nfunction TabPanel(props) {\r\n\tconst { children, value, index, ...other } = props;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"tabpanel\"\r\n\t\t\thidden={value !== index}\r\n\t\t\tid={`simple-tabpanel-${index}`}\r\n\t\t\taria-labelledby={`simple-tab-${index}`}\r\n\t\t\t{...other}\r\n\t\t>\r\n\t\t\t{value === index && <Box p={3}>{children}</Box>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction a11yProps(index) {\r\n\treturn {\r\n\t\tid: `simple-tab-${index}`,\r\n\t\t'aria-controls': `simple-tabpanel-${index}`,\r\n\t};\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t\t// backgroundColor: theme.palette.background.paper,\r\n\t},\r\n}));\r\n\r\nconst Main = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { token } = props;\r\n\tconst [value, setValue] = useState(0);\r\n\tlet user = { name: '', id: '' };\r\n\r\n\tconst [{ data, loading, error }, refetch] = useAxios({\r\n\t\turl: 'https://api.spotify.com/v1/me',\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: 'Bearer ' + token,\r\n\t\t},\r\n\t});\r\n\r\n\tif (data) {\r\n\t\tconsole.log(data);\r\n\t\tuser = { name: data.display_name, id: data.id };\r\n\t}\r\n\r\n\tconst handleChange = (event, newValue) => {\r\n\t\tsetValue(newValue);\r\n\t};\r\n\r\n\tif (user.id !== '') {\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t\t<Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n\t\t\t\t\t\t<Tab label=\"Playlist Albums\" {...a11yProps(0)} />\r\n\t\t\t\t\t\t<Tab label=\"Nothing... for now\" {...a11yProps(1)} />\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<TabPanel value={value} index={0}>\r\n\t\t\t\t\t<PlaylistAlbumsPage token={token} user={user} />\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={value} index={1}>\r\n\t\t\t\t\tItem Two\r\n\t\t\t\t</TabPanel>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (error) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tlocalStorage.setItem('token', '');\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tClear Token\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Loading...</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport { authEndpoint, clientId, redirectUri, scopes } from './config';\r\nimport hash from './hash';\r\nimport Main from './components/Main';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport state from './store';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\ttoken: null,\r\n\t\t\titem: {\r\n\t\t\t\talbum: {\r\n\t\t\t\t\timages: [{ url: '' }],\r\n\t\t\t\t},\r\n\t\t\t\tname: '',\r\n\t\t\t\tartists: [{ name: '' }],\r\n\t\t\t\tduration_ms: 0,\r\n\t\t\t},\r\n\t\t\tis_playing: 'Paused',\r\n\t\t\tprogress_ms: 0,\r\n\t\t};\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t// Set token\r\n\t\tlet _token = hash.access_token || localStorage.getItem('token');\r\n\r\n\t\tif (_token) {\r\n\t\t\t// Set token\r\n\t\t\tthis.setState({\r\n\t\t\t\ttoken: _token,\r\n\t\t\t});\r\n\t\t\tlocalStorage.setItem('token', _token);\r\n\t\t\tstate.token = _token;\r\n\t\t\t// this.getCurrentlyPlaying(_token);\r\n\t\t}\r\n\t}\r\n\r\n\tclearLocalStorage() {\r\n\t\tlocalStorage.setItem('token', '');\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<header>\r\n\t\t\t\t\t{!this.state.token && (\r\n\t\t\t\t\t\t<div className=\"App-header\">\r\n\t\t\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn--loginApp-link\"\r\n\t\t\t\t\t\t\t\thref={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n\t\t\t\t\t\t\t\t\t'%20'\r\n\t\t\t\t\t\t\t\t)}&response_type=token&show_dialog=true`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin to Spotify\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{this.state.token && <Main token={this.state.token} />}\r\n\t\t\t\t</header>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}